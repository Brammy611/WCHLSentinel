// face_recognition.did
// Candid interface definition for Face Recognition Canister

type BoundingBox = record {
    x: float32;
    y: float32;
    width: float32;
    height: float32;
};

type FaceDetectionResult = record {
    face_detected: bool;
    face_count: nat32;
    bounding_boxes: vec BoundingBox;
};

type FaceRecognitionResult = record {
    face_detected: bool;
    face_count: nat32;
    face_embeddings: vec float32;
    bounding_boxes: vec BoundingBox;
};

type ModelStatus = variant {
    NotLoaded;
    Loading;
    Ready;
    Error: text;
};

type CanisterStats = record {
    face_detection_model_status: ModelStatus;
    face_recognition_model_status: ModelStatus;
    total_detections: nat64;
    total_recognitions: nat64;
    model_detection_size: nat64;
    model_recognition_size: nat64;
};

service : {
    // Model management functions
    "setup_models": () -> (text);
    "clear_face_detection_model_bytes": () -> ();
    "clear_face_recognition_model_bytes": () -> ();
    "append_face_detection_model_bytes": (vec nat8) -> ();
    "append_face_recognition_model_bytes": (vec nat8) -> ();
    
    // Face detection and recognition functions
    "detect_face": (vec nat8) -> (FaceDetectionResult) query;
    "recognize_face": (vec nat8) -> (FaceRecognitionResult) query;
    
    // Utility functions
    "get_stats": () -> (CanisterStats) query;
    "health_check": () -> (bool) query;
    
    // Admin functions
    "reset_stats": () -> ();
}