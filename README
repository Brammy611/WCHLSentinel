# Sentinel Pengawas Ujian Online 👁️

[![JavaScript](https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black "JavaScript")](https://www.javascript.com)
[![React](https://img.shields.io/badge/React-20232A?style=for-the-badge&logo=react&logoColor=61DAFB "React")](https://reactjs.org/)
[![Python](https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white "Python")](https://www.python.org/)
[![Rust](https://img.shields.io/badge/Rust-000000?style=for-the-badge&logo=rust&logoColor=white "Rust")](https://www.rust-lang.org/)
[![npm](https://img.shields.io/badge/npm-CB3837?style=for-the-badge&logo=npm&logoColor=white "npm")](https://www.npmjs.com/)

Sentinel Pengawas Ujian Online adalah sistem pengawasan ujian yang menggunakan kecerdasan buatan untuk memantau peserta ujian secara *real-time*. Proyek ini bertujuan untuk memastikan integritas ujian online dengan mendeteksi potensi kecurangan dan memberikan laporan kepada pengawas ujian.

## Fitur Utama ✨

*   **Deteksi Wajah Real-time 👤**: Menggunakan algoritma deteksi wajah canggih untuk memastikan peserta ujian selalu berada di depan kamera.
*   **Analisis Perilaku Mencurigakan 🚨**: Menganalisis perilaku peserta ujian, seperti gerakan mata dan ekspresi wajah, untuk mendeteksi potensi kecurangan.
*   **Integrasi Backend Aman 🛡️**: Backend dibangun dengan Rust untuk performa tinggi dan keamanan data yang optimal.
*   **Antarmuka Pengguna Interaktif 🖥️**: Antarmuka pengguna yang mudah digunakan untuk pengawas ujian untuk memantau peserta ujian dan melihat laporan.

## Tech Stack 🛠️

*   **Bahasa Utama**: JavaScript
*   **Frontend**: Mungkin menggunakan React (berdasarkan badge dan sifat proyek) ⚛️
*   **Backend**: Rust (untuk komponen sensitif performa dan keamanan) 🦀
*   **AI/ML**: Python (untuk deteksi wajah dan analisis perilaku) 🐍

## Instalasi & Menjalankan 🚀

1.  Clone repositori:
    ```bash
    git clone https://github.com/Brammy611/WCHLSentinel
    ```

2.  Masuk ke direktori:
    ```bash
    cd WCHLSentinel
    ```

3.  Install dependensi (Frontend - Asumsi menggunakan npm):
    ```bash
    cd ai-proctoring
    npm install
    cd ..
    ```

4.  Install dependensi (Backend - Rust):
    ```bash
    cd backend/icp
    cargo build
    cd ../..
    ```

5. Jalankan *script* setup (Backend - Rust):
    ```bash
    cd backend/icp/scripts
    chmod +x setup_icp.sh
    ./setup_icp.sh
    cd ../../..
    ```

6.  Jalankan proyek (Frontend - Asumsi menggunakan npm):
    ```bash
    cd ai-proctoring
    npm start
    cd ..
    ```
7. Jalankan Proyek (Backend - Rust)
    ```bash
    cd backend/icp
    dfx canister install --all
    cd ../..
    ```

## Cara Berkontribusi 🤝

1.  Fork repositori ini.
2.  Buat branch dengan nama fitur Anda: `git checkout -b fitur/nama-fitur`
3.  Lakukan commit perubahan Anda: `git commit -m "Tambahkan: fitur baru"`
4.  Push ke branch Anda: `git push origin fitur/nama-fitur`
5.  Buat Pull Request.
